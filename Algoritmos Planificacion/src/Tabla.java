import java.awt.Color;
import java.awt.Graphics;
import javax.swing.table.DefaultTableModel;

public class Tabla extends javax.swing.JFrame {

    DefaultTableModel dtm = new DefaultTableModel();
    public Proceso p;
    boolean bandera = false;
    
    /**
     * Creates new form Tabla
     */
    public Tabla() {
        initComponents();
        String[] Titulo = new String[]{"Tiempo de llegada", "Proceso", "Rafaga", "Tiempo de comienzo", "Tiempo final", "Tiempo de retorno", "Tiempo de espera"};
        dtm.setColumnIdentifiers(Titulo);
        jTable1.setModel(dtm);
        this.setLocationRelativeTo(null);
        this.setTitle("Resultados de la ejecucion");
    }
    /**Agregar: a√±ade los tiempos de cada proceso a la tabla
     * @param llegada
     * @param proceso
     * @param rafaga
     * @param comienzo
     * @param fin
     * @param retorno
     * @param espera
     */
    void Agregar(int llegada, String proceso, int rafaga, int comienzo, int fin, int retorno, int espera) {
        dtm.addRow(new Object[]{
            llegada, proceso, rafaga, comienzo, fin, retorno, espera
        });
        repaint();
    }

    public void paint(Graphics g) {
        super.paint(g);
        int rafaga;
        int inicio;
        int y = dtm.getColumnCount();
        int red;
        int blue;
        int green;

        if (true) {

            for (int i = 0; i < y+1; i++) {
                /**Se escogen colores al azar para pintar los procesos*/
                red = (int) (Math.random() * 255) + 1;
                blue = (int) (Math.random() * 255) + 1;
                green = (int) (Math.random() * 255) + 1;
                g.setColor(new Color(red, blue, green));
                g.drawString((String) dtm.getValueAt(i, 1), 30, 240 + (i * 15));
                rafaga = (int) dtm.getValueAt(i, 2);
                inicio = (((int) dtm.getValueAt(i, 3)) * 11) + 50;
                while (rafaga > 0) {
                    /**Se pintan los procesos*/
                    g.fillRect(((rafaga - 1) * 11) + inicio, 230 + (i * 15), 10, 10);
                    rafaga--;
                }
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
